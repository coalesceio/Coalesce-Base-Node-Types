{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Dimension  == #}
{# == Node Type Description    : This node creates dimension table,view and also override create sql for view  == #}


{# Override CreateSQL for view #}

{% if node.override.create.enabled %}
	
	{{ node.override.create.script }}

{% elif node.materializationType == 'table' %}
	{{ stage('Create Dimension Table') }}

{# CreateSQL for Table #}

	CREATE OR REPLACE TABLE {{ ref_no_link(node.location.name, node.name) }}
	(
		{% for col in columns %}
			"{{ col.name }}" {{ col.dataType }}
			{% if col.isSurrogateKey %}
		        identity
			{% endif %}
			{%- if not col.nullable %} NOT NULL
				{%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}
			{% endif %}
			{%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
			{%- if not loop.last -%}, {% endif %}
		{% endfor %}
	)
	{%- if node.description | length > 0 %} COMMENT = '{{ node.description | escape }}'{% endif %}

	{% if config.insertZeroKey %}

		{{ stage('Insert Zero Record') }}
		INSERT INTO {{ ref_no_link(node.location.name, node.name) }}
		(SELECT 
		{% for col in sources[0].columns %}
			{% set dtparams = col.dataType.partition('(')[-1].rpartition(')')[0].split(',') %}
			{% if col.isSurrogateKey %} {{config.insertZeroKeySurrogateKey}}
			{% elif col.isSystemCurrentFlag %}'Y'
			{% elif col.isSystemStartDate or col.isSystemEndDate or col.isSystemUpdateDate or col.isSystemCreateDate %}{{ get_source_transform(col) }}
			{% elif col.isSystemVersion%}1
			{% elif col.dataType[:3] | upper in ('NUM','INT','DEC','FLO') %}0
			{% elif col.dataType[:4] | upper in ('DATE','TIME') %}CAST({{config.insertZeroKeyDate}} AS {{ col.dataType }})
			{% elif col.dataType[:3] | upper in ('VAR','CHA','STR','BIN') %}
					{% if dtparams[0] and dtparams[0] | int <  config.insertZeroKeyStr | length  %}
						SUBSTRING({{config.insertZeroKeyStr}},1,{{ dtparams[0] }})
					{% else %}
						'{{config.insertZeroKeyStr}}'
					{% endif %}
			{% elif col.nullable %}NULL
			{% else %}''
			{% endif %}
			AS "{{ col.name }}"
			{% if not loop.last %}, {% endif %}
		{% endfor %}
		)
	{% endif %}
{% elif node.materializationType == 'view' %}
	{{ stage('Create Dimension View') }}

{# CreateSQL for View #}

	CREATE OR REPLACE VIEW {{ ref_no_link(node.location.name, node.name) }}
	(
		{% for col in columns %}
			"{{ col.name }}"
			{%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
			{%- if not loop.last -%},{% endif %}
		{% endfor %}
	)
	{%- if node.description | length > 0 %} COMMENT = '{{ node.description | escape }}'{% endif %}
	AS
	{% for source in sources %}

		{% if loop.first %}SELECT {% endif %}
		{% if config.selectDistinct %}DISTINCT{% endif %}

		{% for col in source.columns %}
			{% if col.isSurrogateKey or col.isSystemUpdateDate or col.isSystemCreateDate %}
                NULL
			{% else %}
                {{ get_source_transform(col) }}
			{% endif %}
			AS "{{ col.name }}"
			{%- if not loop.last -%}, {% endif %}
		{% endfor %}
		{{ source.join }}
        {% if config.groupByAll %} GROUP BY ALL {% endif %}
		{% if not loop.last %} UNION ALL {% endif %}
	{% endfor %}

{% endif %}
